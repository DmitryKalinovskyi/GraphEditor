<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:GraphApplication.CustomControls"
                    xmlns:converters="clr-namespace:GraphApplication.Converters"
                    >
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <Style TargetType="{x:Type controls:VertexButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VertexButton}">
                    <Grid>
                        <Border
                            Height="{TemplateBinding Radius}"
                            Width="{TemplateBinding Radius}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderThickness="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Opacity="{TemplateBinding Opacity}">
                            
                            <Ellipse Opacity="{TemplateBinding Opacity}"
                                     Fill="{DynamicResource VertexColor}">
                                <Ellipse.Effect>
                                    <DropShadowEffect ShadowDepth="{DynamicResource VertexShadowDepth}"
                                                      Color="{DynamicResource VertexShadowColor}"/>
                                </Ellipse.Effect>

                            </Ellipse>
                        </Border>

                        <!--<Decorator Panel.ZIndex="6" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Height="{TemplateBinding Radius}"
                                   Width="{TemplateBinding Radius}">
                            <controls:EditableTextBlock
                                FontSize="16"
                                Foreground="Black"
                                Width="100"
                                IsHitTestVisible="True"
                                FocusVisualStyle="{x:Null}"
                                Text="{TemplateBinding Caption}"/>
                        </Decorator>-->
                        <controls:EditableTextBlock Grid.IsSharedSizeScope="False"
                        FontSize="16"
                        Panel.ZIndex="6"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Width="100"
                        IsHitTestVisible="True"
                        FocusVisualStyle="{x:Null}"
                        Foreground="{DynamicResource VertexForeground}"
                        Text="{TemplateBinding Caption}"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
        <Trigger Property="{Binding DataContext.IsSelected}" Value="True">
            <Setter Property="Panel.ZIndex" Value="1"></Setter>
        </Trigger>
    </Style.Triggers>-->

    </Style>


    <!--<Style TargetType="{x:Type controls:VertexButton}">
        <Setter Property="Panel.ZIndex" Value="0"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VertexButton}">
                    <Grid>
                        <Grid.RenderTransform>
                            <TranslateTransform X="-50" Y="-20"/>
                        </Grid.RenderTransform>
                        <Border>
                            <Border.Style >
                                <Style TargetType="Border">
                                    <Setter Property="Height" Value="40"></Setter>
                                    <Setter Property="Width" Value="40"></Setter>
                                    <Setter Property="BorderThickness" Value="2"></Setter>
                                    <Setter Property="CornerRadius" Value="20"></Setter>

                                    <Setter Property="BorderBrush" Value="Black"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="BorderBrush" Value="Orange"></Setter>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsActive}" Value="True"></Condition>
                                                <Condition Binding="{Binding IsSelected}" Value="False"></Condition>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"></Condition>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="BorderBrush" Value="Blue"></Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsActive}" Value="True"></Condition>
                                                <Condition Binding="{Binding IsSelected}" Value="True"></Condition>
                                                <Condition Binding="{Binding IsMarked}" Value="False"></Condition>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="BorderBrush" Value="BlueViolet"></Setter>
                                            <Setter Property="BorderThickness" Value="3"></Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsActive}" Value="True"></Condition>
                                                <Condition Binding="{Binding IsMarked}" Value="True"></Condition>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="BorderBrush" Value="Red"></Setter>
                                            <Setter Property="BorderThickness" Value="4"></Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsActive}" Value="False"/>
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="Opacity" Value="0.5"></Setter>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Ellipse>
                                <Ellipse.Effect>
                                    <DropShadowEffect ShadowDepth="1" Color="CadetBlue"/>
                                </Ellipse.Effect>

                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="White"></Setter>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsActive}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Opacity" Value="0.5"></Setter>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </Border>

                        <controls:EditableTextBlock 
                            FontSize="16"
                            Panel.ZIndex="6"
                            HorizontalAlignment="Center"
                            Foreground="Black"
                            VerticalAlignment="Center"
                            Width="100"
                            IsHitTestVisible="True"
                            FocusVisualStyle="{x:Null}"
                            Text="{Binding Caption}"/>


                        --><!--<Label x:Name="TextBox" IsHitTestVisible="False"
                            Width="100"
                            Panel.ZIndex="6"
                            HorizontalContentAlignment="Center" 
                            VerticalAlignment="Center" 
                            Content="{Binding Caption}"
                            FontSize="16">
                            </Label>--><!--
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        --><!--<Style.Triggers>
            <Trigger Property="{Binding DataContext.IsSelected}" Value="True">
                <Setter Property="Panel.ZIndex" Value="1"></Setter>
            </Trigger>
        </Style.Triggers>--><!--

    </Style>-->

    <Style TargetType="{x:Type controls:GraphArrow}">
        <Setter Property="Foreground" Value="{DynamicResource EdgeForeground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:GraphArrow}">
                    <Canvas>
                        <Line Stroke="{TemplateBinding Foreground}"
                          Opacity="{TemplateBinding Opacity}"
                          FocusVisualStyle="{x:Null}"
                          StrokeThickness="{TemplateBinding StrokeThickness}"
X1="{TemplateBinding StartX}"
    Y1="{TemplateBinding StartY}"
    X2="{TemplateBinding EndX}"
    Y2="{TemplateBinding EndY}"
                          
    />


                        <!--<controls:EditableTextBlock Text="{Binding Path=Caption, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                Canvas.Left="{TemplateBinding CenterX}"
                                                Canvas.Top="{TemplateBinding CenterY}"
                                                Foreground="Black"
                                                Visibility="{TemplateBinding ShowCaption,
                        Converter={StaticResource BoolToVisibilityConverter}}"/>-->

                        <TextBox Text="{Binding Path=Caption, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                        Canvas.Left="{TemplateBinding CenterX}"
                        Canvas.Top="{TemplateBinding CenterY}"
                        Foreground="{DynamicResource EdgeLabelForeground}"
                                 Background="{DynamicResource EdgeLabelBackground}"
                        Visibility="{TemplateBinding ShowCaption,
Converter={StaticResource BoolToVisibilityConverter}}"/>

                    </Canvas>
                    
                    <!--</Border>-->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsMarked}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ActiveEdgeForeground}"/>
                            <Setter Property="StrokeThickness" Value="{DynamicResource ActiveEdgeThickness}"/>
                            <Setter Property="Opacity" Value="{DynamicResource ActiveEdgeOpacitry}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Start.IsActive}" Value="True"/>
                                <Condition Binding="{Binding End.IsActive}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="StrokeThickness" Value="{DynamicResource EdgeThickness}"/>
                            <Setter Property="Opacity" Value="{DynamicResource EdgeOpacitry}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>