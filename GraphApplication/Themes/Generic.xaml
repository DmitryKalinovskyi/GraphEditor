<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:GraphApplication.CustomControls"
    xmlns:converters="clr-namespace:GraphApplication.Converters">

    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>


    <Style TargetType="{x:Type controls:GraphArrow}">
        <Setter Property="Foreground" Value="Black"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:GraphArrow}">
                    <Canvas>
                        <Line Stroke="{TemplateBinding Foreground}"
                              Opacity="{TemplateBinding Opacity}"
                              FocusVisualStyle="{x:Null}"
                              StrokeThickness="{TemplateBinding StrokeThickness}"
    X1="{TemplateBinding StartX}"
        Y1="{TemplateBinding StartY}"
        X2="{TemplateBinding EndX}"
        Y2="{TemplateBinding EndY}"
                              
        />


                        <controls:EditableTextBlock Text="{Binding Path=Caption, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                    Canvas.Left="{TemplateBinding CenterX}"
                                                    Canvas.Top="{TemplateBinding CenterY}"
                                                    Visibility="{TemplateBinding ShowCaption,
                            Converter={StaticResource BoolToVisibilityConverter}}"/>



                    </Canvas>
                    <!--</Border>-->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsMarked}" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                            <Setter Property="StrokeThickness" Value="{DynamicResource ActiveEdgeThickness}"/>
                            <Setter Property="Opacity" Value="{DynamicResource ActiveEdgeOpacitry}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Start.IsActive}" Value="True"/>
                                <Condition Binding="{Binding End.IsActive}" Value="True"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="StrokeThickness" Value="{DynamicResource EdgeThickness}"/>
                            <Setter Property="Opacity" Value="{DynamicResource EdgeOpacitry}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="Edge"
       TargetType="{x:Type Line}">
    <Setter Property="StrokeThickness" Value="4"/>
    <Setter Property="Stroke" Value="Black"/>
    <Setter Property="Opacity" Value="0.5"></Setter>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Style.Triggers>
        <DataTrigger Binding="{Binding IsMarked}" Value="True">
            <Setter Property="Stroke" Value="Red"></Setter>
        </DataTrigger>
        <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Start.IsActive}" Value="True"></Condition>
                <Condition Binding="{Binding End.IsActive}" Value="True"></Condition>
            </MultiDataTrigger.Conditions>
            
            <Setter Property="Opacity" Value="0.8"></Setter>
        </MultiDataTrigger>
    </Style.Triggers>
</Style>-->
    <Style TargetType="{x:Type controls:EditableTextBlock}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:EditableTextBlock}">
                    <Grid>
                        <!--<TextBlock Text="{TemplateBinding Text}" />-->
                        <TextBox Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
